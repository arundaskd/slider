{"version":3,"sources":["../../../../src/main/resources/META-INF/resources/Slider/Slider.soy.js"],"names":["goog","soy","incrementalDom","$templateAlias1","Soy","opt_ijData","opt_ijData_deprecated","label","opt_data","name","showLabel","tip","required","spritemap","param14","$content","contentRenderer","exports","$render","value","_handleFieldChanged","predefinedValue","attributes__soy35","Slider","Component","templates"],"mappings":"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","sourcesContent":["/* jshint ignore:start */\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\nvar templates;\ngoog.loadModule(function(exports) {\nvar soy = goog.require('soy');\nvar soydata = goog.require('soydata');\n// This file was automatically generated from Slider.soy.\n// Please don't edit this file by hand.\n\n/**\n * @fileoverview Templates in namespace Slider.\n * @public\n */\n\ngoog.module('Slider.incrementaldom');\n\ngoog.require('goog.soy.data.SanitizedContent');\nvar incrementalDom = goog.require('incrementaldom');\ngoog.require('soy.asserts');\nvar soyIdom = goog.require('soy.idom');\n\nvar $templateAlias1 = Soy.getTemplate('FieldBase.incrementaldom', 'render');\n\n\n/**\n * @param {{\n *  label: (!goog.soy.data.SanitizedContent|string),\n *  name: (!goog.soy.data.SanitizedContent|string),\n *  showLabel: boolean,\n *  tip: (!goog.soy.data.SanitizedContent|string),\n *  value: (?),\n *  _handleFieldChanged: (*|null|undefined),\n *  predefinedValue: (*|null|undefined),\n *  required: (boolean|null|undefined),\n *  spritemap: (!goog.soy.data.SanitizedContent|null|string|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $render(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var label = soy.asserts.assertType(goog.isString(opt_data.label) || opt_data.label instanceof goog.soy.data.SanitizedContent, 'label', opt_data.label, '!goog.soy.data.SanitizedContent|string');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var name = soy.asserts.assertType(goog.isString(opt_data.name) || opt_data.name instanceof goog.soy.data.SanitizedContent, 'name', opt_data.name, '!goog.soy.data.SanitizedContent|string');\n  /** @type {boolean} */\n  var showLabel = soy.asserts.assertType(goog.isBoolean(opt_data.showLabel) || opt_data.showLabel === 1 || opt_data.showLabel === 0, 'showLabel', opt_data.showLabel, 'boolean');\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var tip = soy.asserts.assertType(goog.isString(opt_data.tip) || opt_data.tip instanceof goog.soy.data.SanitizedContent, 'tip', opt_data.tip, '!goog.soy.data.SanitizedContent|string');\n  /** @type {?} */\n  var value = opt_data.value;\n  /** @type {*|null|undefined} */\n  var _handleFieldChanged = opt_data._handleFieldChanged;\n  /** @type {*|null|undefined} */\n  var predefinedValue = opt_data.predefinedValue;\n  /** @type {boolean|null|undefined} */\n  var required = soy.asserts.assertType(opt_data.required == null || (goog.isBoolean(opt_data.required) || opt_data.required === 1 || opt_data.required === 0), 'required', opt_data.required, 'boolean|null|undefined');\n  /** @type {!goog.soy.data.SanitizedContent|null|string|undefined} */\n  var spritemap = soy.asserts.assertType(opt_data.spritemap == null || (goog.isString(opt_data.spritemap) || opt_data.spritemap instanceof goog.soy.data.SanitizedContent), 'spritemap', opt_data.spritemap, '!goog.soy.data.SanitizedContent|null|string|undefined');\n  var param14 = function() {\n    $content(opt_data, null, opt_ijData);\n  };\n  $templateAlias1({contentRenderer: param14, label: label, name: name, required: required, showLabel: showLabel, spritemap: spritemap, tip: tip}, null, opt_ijData);\n}\nexports.render = $render;\n/**\n * @typedef {{\n *  label: (!goog.soy.data.SanitizedContent|string),\n *  name: (!goog.soy.data.SanitizedContent|string),\n *  showLabel: boolean,\n *  tip: (!goog.soy.data.SanitizedContent|string),\n *  value: (?),\n *  _handleFieldChanged: (*|null|undefined),\n *  predefinedValue: (*|null|undefined),\n *  required: (boolean|null|undefined),\n *  spritemap: (!goog.soy.data.SanitizedContent|null|string|undefined)\n * }}\n */\n$render.Params;\nif (goog.DEBUG) {\n  $render.soyTemplateName = 'Slider.render';\n}\n\n\n/**\n * @param {{\n *  name: (!goog.soy.data.SanitizedContent|string),\n *  value: (?),\n *  _handleFieldChanged: (*|null|undefined),\n *  predefinedValue: (*|null|undefined)\n * }} opt_data\n * @param {Object<string, *>=} opt_ijData\n * @param {Object<string, *>=} opt_ijData_deprecated\n * @return {void}\n * @suppress {checkTypes}\n */\nfunction $content(opt_data, opt_ijData, opt_ijData_deprecated) {\n  opt_ijData = opt_ijData_deprecated || opt_ijData;\n  /** @type {!goog.soy.data.SanitizedContent|string} */\n  var name = soy.asserts.assertType(goog.isString(opt_data.name) || opt_data.name instanceof goog.soy.data.SanitizedContent, 'name', opt_data.name, '!goog.soy.data.SanitizedContent|string');\n  /** @type {?} */\n  var value = opt_data.value;\n  /** @type {*|null|undefined} */\n  var _handleFieldChanged = opt_data._handleFieldChanged;\n  /** @type {*|null|undefined} */\n  var predefinedValue = opt_data.predefinedValue;\n  var attributes__soy35 = function() {\n    incrementalDom.attr('class', 'ddm-field-slider form-control slider');\n    incrementalDom.attr('data-oninput', _handleFieldChanged);\n    incrementalDom.attr('id', 'myRange');\n    incrementalDom.attr('max', '1');\n    incrementalDom.attr('min', '100');\n    incrementalDom.attr('name', name);\n    incrementalDom.attr('type', 'range');\n    if (value) {\n      incrementalDom.attr('value', value);\n    } else {\n      incrementalDom.attr('value', predefinedValue);\n    }\n  };\n  incrementalDom.elementOpenStart('input');\n      attributes__soy35();\n  incrementalDom.elementOpenEnd();\n  incrementalDom.elementClose('input');\n}\nexports.content = $content;\n/**\n * @typedef {{\n *  name: (!goog.soy.data.SanitizedContent|string),\n *  value: (?),\n *  _handleFieldChanged: (*|null|undefined),\n *  predefinedValue: (*|null|undefined)\n * }}\n */\n$content.Params;\nif (goog.DEBUG) {\n  $content.soyTemplateName = 'Slider.content';\n}\n\nexports.render.params = [\"label\",\"name\",\"showLabel\",\"tip\",\"value\",\"_handleFieldChanged\",\"predefinedValue\",\"required\",\"spritemap\"];\nexports.render.types = {\"label\":\"string\",\"name\":\"string\",\"showLabel\":\"bool\",\"tip\":\"string\",\"value\":\"?\",\"_handleFieldChanged\":\"any\",\"predefinedValue\":\"any\",\"required\":\"bool\",\"spritemap\":\"string\"};\nexports.content.params = [\"name\",\"value\",\"_handleFieldChanged\",\"predefinedValue\"];\nexports.content.types = {\"name\":\"string\",\"value\":\"?\",\"_handleFieldChanged\":\"any\",\"predefinedValue\":\"any\"};\ntemplates = exports;\nreturn exports;\n\n});\n\nclass Slider extends Component {}\nSoy.register(Slider, templates);\nexport { Slider, templates };\nexport default templates;\n/* jshint ignore:end */\n"]}