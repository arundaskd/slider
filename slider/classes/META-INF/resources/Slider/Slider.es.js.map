{"version":3,"sources":["../../../../src/main/resources/META-INF/resources/Slider/Slider.es.js"],"names":["DDMSlider","Component","event","name","value","fieldInstance","originalEvent","Config","predefinedValue","required","showLabel","spritemap","Soy","templates"],"mappings":";;;;;;;;;AAAA,UAAA,6DAAA;;AACA,UAAA,sBAAA;;AACA,MAAA,aAAA,uBAAA,QAAA,cAAA,CAAA,CAAA;;AACA,MAAA,kBAAA,uBAAA,QAAA,uCAAA,CAAA,CAAA;;AACA,MAAA,YAAA,uBAAA,QAAA,iCAAA,CAAA,CAAA;;AACA,MAAA,cAAA,QAAA,mCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;MAGMA;;;;;;;;;;;;;oCAEYE,K,EAAOC,I,EAAMC,K,EAAO;AAC9B,aAAA,IAAA,CAAA,IAAA,EAAgB;AACZC,yBADY,IAAA;AAEZC,yBAFY,KAAA;AAGZF,iBAAAA;AAHY,SAAhB;AAKH;;;0CAEmBF,K,EAAO;AAAA,YAAA,QAAA,IAAA;;AAAA,YAAA,QACPA,MADO,MACPA,CADO,KAAA;AAGvB,aAAA,QAAA,CACI;AACIE,iBAAAA;AADJ,SADJ,EAII,YAAA;AAAA,iBAAM,MAAA,aAAA,CAAA,KAAA,EAAA,aAAA,EAAN,KAAM,CAAN;AAJJ,SAAA;AAMH;;;;IAnBmBH,gBAAAA,SAAAA,C;;AAsBxBD,YAAAA,KAAAA,GAAkB;AAEdG,UAAMI,YAAAA,MAAAA,CAAAA,MAAAA,GAFQ,QAERA,EAFQ;AAIdC,qBAAiBD,YAAAA,MAAAA,CAAAA,SAAAA,CAAiB,CAACA,YAAAA,MAAAA,CAAD,MAACA,EAAD,EAAkBA,YAAAA,MAAAA,CAJtC,MAIsCA,EAAlB,CAAjBA,CAJH;AAMdE,cAAUF,YAAAA,MAAAA,CAAAA,IAAAA,GAAAA,KAAAA,CANI,KAMJA,CANI;AAQdG,eAAWH,YAAAA,MAAAA,CAAAA,IAAAA,GAAAA,KAAAA,CARG,IAQHA,CARG;AAUdI,eAAWJ,YAAAA,MAAAA,CAVG,MAUHA,EAVG;AAYdH,WAAOG,YAAAA,MAAAA,CAAAA,MAAAA,GAAAA,KAAAA,CAAAA,EAAAA;AAZO,GAAlBP,C,CAeA;;AACAY,YAAAA,SAAAA,EAAAA,QAAAA,CAAAA,SAAAA,EAAwBC,WAAxBD,SAAwBC,CAAxBD;;iBAEeZ,S","sourcesContent":["import 'dynamic-data-mapping-form-field-type/FieldBase/FieldBase.es';\nimport './SliderRegister.soy.js';\nimport templates from './Slider.soy.js';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\nimport {Config} from 'metal-state';\n\n/**\n * Slider Component\n */\nclass DDMSlider extends Component {\n\n    dispatchEvent(event, name, value) {\n        this.emit(name, {\n            fieldInstance: this,\n            originalEvent: event,\n            value\n        });\n    }\n\n    _handleFieldChanged(event) {\n        const {value} = event.target;\n\n        this.setState(\n            {\n                value\n            },\n            () => this.dispatchEvent(event, 'fieldEdited', value)\n        );\n    }\n}\n\nDDMSlider.STATE = {\n\n    name: Config.string().required(),\n\n    predefinedValue: Config.oneOfType([Config.number(), Config.string()]),\n\n    required: Config.bool().value(false),\n\n    showLabel: Config.bool().value(true),\n\n    spritemap: Config.string(),\n\n    value: Config.string().value('')\n}\n\n// Register component\nSoy.register(DDMSlider, templates);\n\nexport default DDMSlider;"]}